package main

import (
	"fmt"
	"log"
	"os"
	"strconv"
	"time"
)

type Note struct {
	Date     time.Time
	Sum      int
	Category string
}

func createNote() Note {

	arguments := os.Args
	if len(arguments) < 3 {
		fmt.Println("Not enough arguments")
		os.Exit(1)
	}

	n := Note{}

	n.Date = time.Now().UTC()

	x, err := strconv.Atoi(arguments[1])
	if err != nil {
		fmt.Println("unavailable sum")
		os.Exit(1)
	}
	n.Sum = x

	n.Category = arguments[2]

	return n
}

func main() {

	logs, err := os.OpenFile("logfile.go", os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644)
	if err != nil {
		fmt.Println(err)
		return
	}
	defer logs.Close()

	newLog := log.New(logs, "newLog ", log.LstdFlags)
	newLog.Println(createNote())

}
